@using Bamboozlers.Components.VisualUtility
@using Bamboozlers.Components.Settings.EditComponents.VisualUtility
@inherits SettingsComponentBase

<Tabs @bind-SelectedTab="InteractionMode">
    <Content>
        <TabPanel ElementId="view-panel"
                  Name="view">
            @ViewPanelContent
        </TabPanel>
        <TabPanel ElementId="edit-panel"
                  Name="edit">
            @EditPanelContent
        </TabPanel>
    </Content>
</Tabs>

@code {
    protected RenderFragment ViewPanelContent { get; set; }
    protected RenderFragment EditPanelContent { get; set; }
    protected RenderFragment ToggleEditButton { get; set; }
    protected RenderFragment EditPanelButtons { get; set; }

    private bool Editing { get; set; }
    protected string? InteractionMode { get; set; } = "view";

    protected Task Toggle()
    {
        Editing = !Editing;
        SetViewContext();
        return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        ToggleEditButton = @<CompActionButton ActionCallback="Toggle"
                                              ButtonId="toggle-edit"
                                              IconName="IconName.Pen"
                                              Color="Color.Light"
                                              ButtonCaption="Edit"/>;
        EditPanelButtons = @<CompEditButtons Toggle="Toggle"/>;
        SetViewContext();
    }

    public virtual Task OnValidSubmitAsync()
    {
        return Task.CompletedTask;
    }

    private void SetViewContext()
    {
        InteractionMode = Editing ? "edit" : "view";
    }

}