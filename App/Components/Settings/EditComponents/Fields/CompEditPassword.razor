@inherits EditFieldBase

@{
    ViewPanelContent =
        @<ViewPanelBase DisplayData="********"
                        FieldName="Password"
                        Button="ToggleEditButton"
                        />;

    List<RenderFragment> formFields = [];
    formFields.Add(
        @<Div Class="form-floating mb-3">
             <InputText id="old-password-field"
                        type="password" 
                        @bind-Value="Model!.OldPassword" 
                        class="form-control" 
                        autocomplete="current-password" 
                        aria-required="true" 
                        placeholder="Please enter your old password."/>
             <Label for="old-password-field"
                    class="form-label">
                 Old password
             </Label>
             <ValidationMessage For="() => Model!.OldPassword" 
                                class="text-danger"/>
         </Div>
    );
    formFields.Add(
        @<Div Class="form-floating mb-3">
             <InputText id="new-password-field" 
                        type="password"
                        @bind-Value="Model!.NewPassword" 
                        class="form-control" 
                        autocomplete="new-password" 
                        aria-required="true" 
                        placeholder="Please enter your new password."/>
             <Label for="new-password-field"
                    class="form-label">
                 New password
             </Label>
             <ValidationMessage For="() => Model!.NewPassword" 
                                class="text-danger"/>
         </Div>
    );
    formFields.Add(
        @<Div Class="form-floating mb-3">
            <InputText id="confirm-password-field" 
                       type="password"
                       @bind-Value="Model!.ConfirmPassword" 
                       class="form-control" 
                       autocomplete="new-password" 
                       aria-required="true" 
                       placeholder="Please confirm your new password."/>
            <Label for="confirm-password-field"
                   class="form-label">
                Confirm password
            </Label>
            <ValidationMessage For="() => Model!.ConfirmPassword" 
                               class="text-danger"/>
        </Div>
    );
    
    EditPanelContent =
        @<EditPanelBase
             SubmitCallback="OnValidSubmitAsync"
             Model="Model"
             FormName="change-password"
             Fields="formFields"
             Buttons="EditPanelButtons"/>;
}

@{
    base.BuildRenderTree(__builder);
}

@code {
    private PasswordInputModel Model { get; set; } = new();

    public override async Task OnValidSubmitAsync()
    {
        await base.OnValidSubmitAsync();
        if (DataChangeFunction is null)
        {
            await AlertEventCallback.InvokeAsync(AlertArguments.DefaultErrorAlertArgs);
            return;
        }
        
        var result = await DataChangeFunction.Invoke(new UserDataRecord
        {
            DataType = UserDataType.Password,
            CurrentPassword = Model!.OldPassword,
            NewPassword = Model!.NewPassword
        });
        
        if (result)
            await Toggle();
    }
}