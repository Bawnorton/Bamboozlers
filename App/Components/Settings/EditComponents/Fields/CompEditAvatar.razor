@inherits SettingsComponentBase
@implements ICompImageUploader

@using Bamboozlers.Classes.Events
@using System.Diagnostics
@using Azure.Core
@using Bamboozlers.Classes
@using Blazorise.Extensions


<Row>
    <Label Width="@Width.Px(256)" Height="@Height.Px(256)" Class="overlay-wrapper" for="input-file">
        <Image ElementId="avatar-display"
               Class="border-mask overlay-base fit"
               Source="@(UserData?.Avatar ?? "images/default_profile.png")"/>
        <Image ElementId="hover-effect"
               Class="border-mask overlay fit"
               Source="images/edit_overlay.png"/>
    </Label>
    <InputFile id="input-file" OnChange="@OnFileUpload" hidden/>
</Row>
<Row>
    @if (UserData?.AvatarBytes is not null)
    {
        <CompActionButton Color="Color.Danger"
                                  IconName="IconName.Delete"
                                  ActionCallback="DeleteAvatar"/>
    }
</Row>

@code
{
    private static readonly string[] Allowed_Formats = ["png", "jpeg", "jpeg"];

    public async Task DeleteAvatar()
    {
        if (UserData?.AvatarBytes is null) return;
    
        if (DataChangeFunction is null)
        {
            await AlertEventCallback.InvokeAsync(AlertArguments.DefaultErrorAlertArgs);
            return;
        } 
                                  
        var result = await DataChangeFunction.Invoke(new UserDataRecord
        {
            DataType = UserDataType.Visual,
            AvatarBytes = Array.Empty<byte>()
        });
                                  
        if (result) 
        {
            await AlertEventCallback.InvokeAsync(new AlertArguments(
                Color.Success,
                true,
                "Success!",
                "Your avatar has been removed."
            ));
        }
    }
    
    public async Task OnFileUpload(InputFileChangeEventArgs args)
    {
        if (DataChangeFunction is null)
        {
            await AlertEventCallback.InvokeAsync(AlertArguments.DefaultErrorAlertArgs);
            return;
        }

        await AlertEventCallback.InvokeAsync(
            await ((ICompImageUploader) this).OnFileUpload(args, 
                async (bytes) => 
                    await DataChangeFunction!.Invoke(new UserDataRecord
                        {
                            DataType = UserDataType.Visual,
                            AvatarBytes = bytes,
                        }
                        )
                )
        );
    }

    private async Task<AlertArguments> ProcessFile(byte[] image, EventCallback<byte[]> setCallback)
    {
        if (image.IsNullOrEmpty())
        {
            return new AlertArguments(
                Color.Danger,
                true,
                "Could not change avatar.",
                "An error was encountered while processing uploaded avatar."
            );
        }

        var result = await DataChangeFunction!.Invoke(new UserDataRecord
        {
            DataType = UserDataType.Visual,
            AvatarBytes = image,
        });
        
        if (result)
        {
            return new AlertArguments(
                Color.Success,
                true,
                "Success!",
                "Your avatar has been changed."
            );
        }
        
        return new AlertArguments(
            Color.Danger,
            true,
            "Unable to change avatar.",
            "Unknown error occurred. Please try again."
        );
    }
}