
@if (ColumnWrapped)
{
    <Column ColumnSize="@ColumnSize"
            Class="centre-content"
            Margin="Margin.Is2">
        @Button
    </Column>
}
else
{
    @Button
}

@code {
    private RenderFragment? Button { get; set; }
    
    [Parameter] public EventCallback ActionCallback { get; set; }
    
    [Parameter] public Color Color { get; set; } = Color.Success;

    [Parameter] public bool ColumnWrapped { get; set; } = true;
    
    [Parameter] public IFluentColumn ColumnSize { get; set; } = Blazorise.ColumnSize.Is1;
    
    [Parameter] public IFluentSizing ButtonWidth { get; set; } = Width.Auto;

    [Parameter] public string? ButtonCaption { get; set; }
    
    [Parameter] public string? ButtonId { get; set; }

    [Parameter] public ButtonType ButtonType { get; set; } = ButtonType.Button;

    [Parameter] public IconName? IconName { get; set; }
    
    [Parameter] public bool Disabled { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        Button = @<Button id="@ButtonId"
                          Color="@Color"
                          Width="@ButtonWidth"
                          Type="@ButtonType"
                          Clicked="ExecuteCallback"
                          Disabled="Disabled"
                          TextSize="TextSize.Small">
                     <Icon Name="@IconName"/>
                     @ButtonCaption
                 </Button>;
    }

    private async void ExecuteCallback()
    {
        await ActionCallback.InvokeAsync();
    }
}