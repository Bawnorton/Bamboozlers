@using Blazorise.Extensions
@implements IAvatarViewer;

<Row>
    <Div Width="@Width.Px(DisplayPx)" 
         Height="@Height.Px(DisplayPx)"
         style="max-height: 10vw; max-width: 10vw; aspect-ratio: 1">
        <Image Width="@Width.Px(DisplayPx)" 
               Height="@Height.Px(DisplayPx)" 
               ElementId="avatar-display"
               Class="border-mask fit"
               Source="@(((IAvatarViewer) this).GetDisplayString())"/>
    </Div>
</Row>

@code {
    [Parameter] public byte[]? Avatar { get; set; }
    [Parameter] public string DefaultSrc { get; set; } = "images/default_profile.png";
    [Parameter] public int DisplayPx { get; set; } = 256;
    
    private int? Px => (int?) Width.Px(DisplayPx).FixedSize ?? 256;

    public string GetDisplayString()
    {
        return !Avatar.IsNullOrEmpty()
            ? $"data:image/png;base64,{Convert.ToBase64String(Avatar!)}"
            : DefaultSrc;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
}