@using Bamboozlers.Classes.AppDbContext
@using Bamboozlers.Classes
@using Force.DeepCloner
@using Microsoft.AspNetCore.Identity

@inject IDbContextFactory<AppDbContext> Db
@inject UserManager<User> UserManager;
@inherits UserViewComponentBase

<br/>
<input class="search bg-secondary w-25 p-2 border-0 rounded" type="search" @bind-value="CurrentSearch" @bind-value:event="oninput" placeholder="Search">
<br/><br/>
<h4>Friends - @DisplayedFriends.Count</h4>
<hr/>
<p>@noFriends</p>

@foreach (var friend in DisplayedFriends)
{
    <span style="font-size:1.4em;">@friend.UserName</span>
    <p></p>
}

@code {
    private List<User> Friends = [];
    private List<User> DisplayedFriends = [];
    private string? noFriends;

    private string currentSearch;
    private string CurrentSearch
    {
        get
        {
            if (currentSearch != null)
            {
                List<User> temp = Friends.DeepClone();
                temp.RemoveAll(user => !user.UserName.Contains(currentSearch));
                DisplayedFriends = temp;
                if (DisplayedFriends.Count == 0)
                    noFriends = "No friends found from this search";
                else
                    noFriends = "";
            }
            return currentSearch;
        }
        set
        {
            currentSearch = value;
        }
    }
    
    protected override async Task OnInitializedAsync()
    {
        if (!AuthService.IsAuthenticated().Result) return;

        var self = await AuthService.GetUser();
        await using var db = await Db.CreateDbContextAsync();
        foreach (var friendship in db.FriendShips.Include(f => f.User1).Include(f => f.User2))
        {
            if (friendship.User1ID == self.Id)
            {
                Friends.Add(friendship.User2);
            }
            else if (friendship.User2ID == self.Id)
            {
                Friends.Add(friendship.User1);
            }
        }

        if (Friends.Count == 0)
            noFriends = "You do not have any friends added at this time :(";
        else
            DisplayedFriends = Friends.DeepClone();
    }
}