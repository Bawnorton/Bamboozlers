@inherits SettingsComponentBase

@inject ILogger<CompEditAvatar> Logger;

<FigureImage Source="@UserDisplayRecord.Avatar"/>
<FigureCaption>
    <FileEdit Changed="OnFileUpload" Filter="image/*"/>  
</FigureCaption>

@code
{
    private async Task OnFileUpload(FileChangedEventArgs args)
    {
        if (DataChangeFunction is null)
        {
            await StatusChangeEvent.InvokeAsync(StatusArguments.BasicStatusArgs);
            return;
        }

        IFileEntry? file;
        
        try
        {
            file = args.Files.Single();
        }
        catch (ArgumentNullException)
        {
            await StatusChangeEvent.InvokeAsync(new StatusArguments(
                Color.Danger,
                true,
                "Unable to change avatar.",
                "No file was uploaded."
            ));
            return;
        }
        catch (InvalidOperationException)
        {
            await StatusChangeEvent.InvokeAsync(new StatusArguments(
                Color.Danger,
                true,
                "Unable to change avatar.",
                "More than one file was uploaded. Exactly one file must be uploaded."
            ));
            return;
        }

        var image = new ArraySegment<byte>(); 
        var result = false;
        using (var stream = new MemoryStream())
        {
            try
            {
                await file.WriteToStreamAsync(stream);
                result = stream.TryGetBuffer(out image);
            }
            catch (Exception exc)
            {
                Logger.LogError(exc.ToString());
            }
        }

        if (!result || image.IsNullOrEmpty())
        {
            await StatusChangeEvent.InvokeAsync(new StatusArguments(
                Color.Danger,
                true,
                "Could not change avatar.",
                "An error was encountered while processing uploaded avatar."
            ));
        }
        
        await DataChangeFunction.Invoke(new UserDataRecord
        {
            DataType = UserDataType.Visual,
            Avatar = image.ToArray()
        });
    }
}