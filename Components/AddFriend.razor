@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Bamboozlers.Classes.AppDbContext
@using Bamboozlers.Classes
@inject IDbContextFactory<AppDbContext> Db

@inject UserManager<User> UserManager;

<h2>You can add friends with their username</h2>
<h7 style="color:@color;">@errorMessage &zwnj;</h7>

    <EditForm Model=@attemptRequest OnSubmit=@FormSubmitted>
        <div>
            <InputText @bind-Value=attemptRequest.username class="form-control" id="Name" placeholder="Username" CssClass="remove-border"/>
        </div>
        <input type="submit" class="btn btn-primary" value="Add Friend"/>
    </EditForm>

@code
{
    RequestName attemptRequest = new RequestName();
    private string? errorMessage;
    string color = "#ff5d5d";
    
    public class RequestName
    {
        public string username { get; set; }
    }
    
    private async Task FormSubmitted()
    {
        color = "#ff5d5d";
        var prospect = await UserManager.FindByNameAsync(attemptRequest.username);
        var self = await AuthHelper.GetSelf();
        
        if (prospect is null)
        {
            errorMessage = "User not found";
        }
        else if (prospect.Id == self.Id)
        {
            errorMessage = "Cannot friend self";
        }
        else
        {
            await using var db = await Db.CreateDbContextAsync();
            
                FriendRequest newRequest = new FriendRequest();
                    newRequest.SenderID = self.Id;
                    newRequest.ReceiverID = prospect.Id;
                    newRequest.Status = RequestStatus.Pending;

                if (db.FriendRequests.Contains(newRequest))
                {
                    errorMessage = "Friend request already sent to " + prospect.UserName;
                }
                else if(db.FriendShips.Find(self.Id, prospect.Id) != null || db.FriendShips.Find(prospect.Id,self.Id) != null)
                {
                    errorMessage = "You are already friends with " + prospect.UserName;
                }
                else if (db.BlockList.Find(self.Id, prospect.Id) != null)
                {
                    errorMessage = "You currently have " + prospect.UserName + " blocked";
                }
                else if (db.BlockList.Find(prospect.Id, self.Id) != null)
                {
                    errorMessage = "You are currently blocked by " + prospect.UserName;
                }
                else
                {
                    db.FriendRequests.Add(newRequest);
                    db.SaveChanges();
                    color = "#59ff54";
                    errorMessage = "Friend request sent to " + prospect.UserName;
                }
        }
    }
}